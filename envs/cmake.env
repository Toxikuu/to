# Environment for CMake

cm() {
    BD="${BUILD_DIR:-${BD:-build}}"
    rm -rf    "$BD"
    mkdir -pv "$BD"
    # shellcheck disable=2164
    cd        "$BD"

    local _default_cfg_opts=(
        -D CMAKE_INSTALL_PREFIX=/usr
        -D CMAKE_BUILD_TYPE=Release
        -D BUILD_SHARED_LIBS=ON
        -D CMAKE_SKIP_INSTALL_RPATH=ON
        -W no-dev
    )

    _cfg_opts=("${_default_cfg_opts[@]}" "${_cfg[@]}")
    echo "Using configure options: ${_cfg_opts[*]}" >&2

    cmake "${_cfg_opts[@]}" .. || die "CMake failed"
    printf "%s\n" "${_cfg_opts[@]}" > /_cfg_opts
}

# Decide internally what the default command should be
# Priority: ninja -> samu -> make, determined by membership in `d`
def() {
    echo "[DEBUG] Using _cfg = ${_cfg[*]}" >&2
    if [[ ${d[*]} =~ "ninja" ]]; then
        with ninja
        _cfg+=("-G Ninja")
        cm
        nj
        ni
    elif [[ ${d[*]} =~ "samu" ]]; then
        with samu
        _cfg+=("-G Ninja")
        cm
        sa
        si
    else
        _cfg+=("-G Unix Makefiles")
        cm
        mk
        mi
    fi
}

export -f cm def
